{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daaviinchiii\\\\Documents\\\\GitHub\\\\meu_portfolio\\\\src\\\\components\\\\small_projects\\\\Small_projects.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Small_projects = () => {\n  // we need to create some dates for this, you can do it by yourselves\n  // we need about 8 projects, but you can add all yours :)\n  // in this video we will create about page\n  let projects = [{\n    languages: [\"VUE\", \"CSS\", \"HTML\"],\n    title: \"Bot boilerplate\",\n    body: 'Start creating scalable discord.js bot with typescript in seconds'\n  }, {\n    languages: [\"VUE\", \"JS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }, {\n    languages: [\"VUE\", \"Figma\", \"HTML\"],\n    title: \"Chess pro\",\n    body: 'Figma landing page about service for viewing chess tournaments'\n  }, {\n    languages: [\"React\", \"CSS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }, {\n    languages: [\"VUE\", \"CSS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }, {\n    languages: [\"VUE\", \"CSS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }, {\n    languages: [\"VUE\", \"CSS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }, {\n    languages: [\"VUE\", \"CSS\", \"HTML\"],\n    title: \"My blog\",\n    body: 'Front-end of my future blog website written in vue'\n  }];\n  // you will write dates by yourselves\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" pt-[80px] px-5 max-w-[1560px] mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-white font-medium mt-[68px] mb-[48px] text-[32px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" text-[#C778DD]\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"small-projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards flex justify-center flex-wrap gap-4\",\n      children:\n      // mapping\n      projects.map(e => {\n        let {\n          languages,\n          title,\n          body\n        } = e;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card max-w-[331px] w-full border border-[#ABB2BF]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" border-b border-[#ABB2BF] p-2 text-[#ABB2BF]\",\n              children: languages.map(lang => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [lang, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disc p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \" text-white font-medium text-2xl\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \" text-[#ABB2BF] py-4\",\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \" border border-[#C778DD] px-4 py-2 text-white duration-150 hover:bg-[#C778DD33]\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"www.github.com\",\n                  children: [\"Github \", '<', \"~\", '>']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = Small_projects;\nexport default Small_projects;\nvar _c;\n$RefreshReg$(_c, \"Small_projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Small_projects","projects","languages","title","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","e","lang","href","_c","$RefreshReg$"],"sources":["C:/Users/daaviinchiii/Documents/GitHub/meu_portfolio/src/components/small_projects/Small_projects.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Small_projects = () => {\r\n    // we need to create some dates for this, you can do it by yourselves\r\n    // we need about 8 projects, but you can add all yours :)\r\n    // in this video we will create about page\r\n    let projects = [\r\n        {\r\n            languages: [\"VUE\", \"CSS\", \"HTML\"],\r\n            title: \"Bot boilerplate\",\r\n            body: 'Start creating scalable discord.js bot with typescript in seconds'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"JS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"Figma\", \"HTML\"],\r\n            title: \"Chess pro\",\r\n            body: 'Figma landing page about service for viewing chess tournaments'\r\n        },\r\n        {\r\n            languages: [\"React\", \"CSS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"CSS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"CSS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"CSS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n        {\r\n            languages: [\"VUE\", \"CSS\", \"HTML\"],\r\n            title: \"My blog\",\r\n            body: 'Front-end of my future blog website written in vue'\r\n        },\r\n    ]\r\n    // you will write dates by yourselves\r\n    return (\r\n        <div className=' pt-[80px] px-5 max-w-[1560px] mx-auto'>\r\n            {/* title */}\r\n            <div className=\"\">\r\n                <div className=\" text-white font-medium mt-[68px] mb-[48px] text-[32px]\">\r\n                    <span className=\" text-[#C778DD]\">#</span>\r\n                    <span>small-projects</span>\r\n                </div>\r\n            </div>\r\n            {/* body/cards */}\r\n            <div className=\"cards flex justify-center flex-wrap gap-4\">\r\n                {\r\n                    // mapping\r\n                    projects.map(e => {\r\n                        let { languages, title, body } = e\r\n                        return <>\r\n                            {/* card */}\r\n                            <div className=\"card max-w-[331px] w-full border border-[#ABB2BF]\">\r\n                                {/* skills */}\r\n                                <div className=\" border-b border-[#ABB2BF] p-2 text-[#ABB2BF]\">\r\n                                    {languages.map(lang => {\r\n                                        return <span>{lang} </span>\r\n                                    })}\r\n                                </div>\r\n                                {/* discription */}\r\n                                <div className=\"disc p-4\">\r\n                                    <h2 className=' text-white font-medium text-2xl'>{title}</h2>\r\n                                    <p className=' text-[#ABB2BF] py-4'>{body}</p>\r\n                                    {/* we are only coders so maybe no one have figma projects */}\r\n                                    <button className=' border border-[#C778DD] px-4 py-2 text-white duration-150 hover:bg-[#C778DD33]'>\r\n                                        <a href=\"www.github.com\">Github {'<'}~{'>'}</a>\r\n                                    </button>\r\n                                </div>\r\n                            </div></>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Small_projects"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}